apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: minlog
  labels:
    app: minlog
spec:
  selector:
    matchLabels:
      app: minlog 
  template:
    metadata:
      labels:
        name: minlog
    spec:
      initContainers:
      - name: init-minlog
        image: docker.io/venowolf/minlog:latest
        env:
        - name: RUNNINGONLY
          valueFrom:
            configMapKeyRef:
              name: minlog-config
              key: runningonly
        - name: NAMESPACES
          valueFrom:
            configMapKeyRef:
              name: minlog-config
              key: namespaces
        command: |
          /app/startup.sh -c profile
        volumeMounts:
        - name: valloyconfs
          mountPath: /app/confs

      containers:
      - name: grafana-alloy
        image: docker.io/venowolf/minlog:latest
        command: |
          /usr/bin/alloy --storage.path=/var/lib/alloy --server.http.listen-addr 127.0.0.1:12345
        env:
        - name: CONFIG_FILE
          value: /app/confs/alloy.alloy

        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: vvarlog
          mountPath: /var/log
        - name: valloyconfs
          mountPath: /app/confs
      - name: minlog
        image: docker.io/venowolf/minlog:latest
        env:
        - name: RUNNINGONLY
          valueFrom:
            configMapKeyRef:
              name: minlog-config
              key: runningonly
        - name: NAMESPACES
          valueFrom:
            configMapKeyRef:
              name: minlog-config
              key: namespaces
        command: |
          /app/startup.sh -c run
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: valloyconfs
          mountPath: /app/confs
      # it may be desirable to set a high priority class to ensure that a DaemonSet Pod
      # preempts running Pods
      # priorityClassName: important
      terminationGracePeriodSeconds: 30
      volumes:
      - name: vvarlib
        hostPath:
          path: /var/lib/alloy
          type: DirectoryOrCreate 
      - name: vvarlog
        hostPath:
          path: /var/log
      - name: valloy
        emptyDir: {}

